Corsi Laurea Magistrale

This guide has been written by the Computer Engineering admins of PoliNetwork, collecting opinions of several students who have taken the course. Each paragraph is an opinion.
Click on the name of the course to open its page and read the detailed program.<br>
To add an opinion, use this link: <a href="https://forms.gle/j6CfRG2qixg63F1n8" class="accent">https://forms.gle/j6CfRG2qixg63F1n8</a>



###Data Mining and Text Mining 
Corso davvero completo, assolutamente un must per i Data Scientists. Il corso è anche pratico e Lanzi spiega in maniera davvero semplice e comprensibile. Unico svantaggio: l'esame è poco affidabile, è facile (troppo) prendere un voto basso pur avendo studiato molto.

Corso interessante non particolarmente difficile, progetto interessante una reale applicazione delle consocenze in python, però una volta che viene fatto non si può rifiutare il voto (che vale fino a 9 punti e se si seguono le linee guida si può facilmente prendere un voto alto).
Il problema sta nel professore che è un po' pazzo, fa esami con richieste molto strane, difficili, e metodo di correzione super severo e non è per niente disposto a collaborare con gli studenti in vista delle correzioni.


the course is pretty interesting, fundamental for any data scientist, but the exam is quiet hard. The professor pretends you remember everything he said during the lectures, including every example, and he is too severe in the evaluation. There is an optional project which can substitute one random question of the exam (so you have still to study everything), for 9 points, but the timing to complete it is a bit restricted (3 weeks basically). 


Fundamental course for anyone interested in data science, although there is a huge amount of topics which all need to be studied in full detail in order to be able to do the exam. This means that most of the work is left to personal study, which can be quite overwhelming since it includes not only the theory part (which sometimes is explained too quickly during classes) but also the python notebooks which are rarely seen during classes (it happened once or twice, and there are plenty of them in the course materials). There is an optional project which is then presented and graded up to 9 points by a company: it is nice to do if you are already skilled with data science, because the time is very limited (~20 days during Christmas holidays) and it does NOT make the exam easier, but only shorter (you still have to study everything)


###Machine Learning
The course is very interesting, I think it's fundamental for anyone who is in AI or Data Science. The material is not bad, but I recommend to follow the lessons. Prof. Loiacono is a bit boring, but in my opinion the part on RL is better explained by him than prof. Restelli. This year the program was not exactly the same in the two sections. Drawbacks: it's not an easy course, the effort required is near to a 10 CFU course, to get an high mark. The course provide solid theoretical foundations on ML, but it lacks a bit in showing practice applications, so be prepared for this. 


A fundamental course for everyone interested into data science and artificial intelligence. It's not very easy, but not even so hard. It's too much theoretical, but I know that since this year they have switched from MATLAB to Python for the exercise sessions, which is a good starting point to make it more practical (everyone in the world uses python for ML). Prof. Restelli and his assistant (prof. Trovò) can be better to follow wrt prof. Loiacono and his assistants, but pay attention that the program may have some small differences between the two classes.


+ the course covers a broad variety of topics, but if you want to learn neural networks, this is the wrong course
- Restelli can be very fast
+ Restelli is available for repeating when asked. Ask questions during the lectures!
* be aware that during the exercise sessions new concepts are introduced. You must attend those
+/- slides are quite useful, but not enough. Attend the lectures and take a lot of notes
- the program is huge. Totally worth more than 5 credits!
- the exam is not trivial, as the arguments covered are not always intuitive and require time to master


The amount of work required by this course is unbelievable. There is material for at least 12 credits, but all condensed in the time of 5. The theory of all topics is covered in details, so it feels like a strong knowledge at the end, while they give you just an hint about the practice. Anyway, as a passionate of the field, I've enjoyed that so much. It gives you solid skills to start moving yourself around articles and papers!
As previously said, many people were disappointed by the practical side, that is just an introduction to scikit learn on python, but considered the small amount of time, they do what they can. Just consider this as a theory course. 
It's pretty difficult to get a good grade in this exam. Not only for the magnitude of the load, but because of the exam itself. People usually are very satisfied with 25. 
Between the two professors, Restelli is by far the best. The exam is shared between the two, so I would highly recommend to follow his course. 
Another hint: the practice sessions are not really required for the exam: the coding exercise just requires basic coding reading skills (it basically requires you to "decode" a theoretical question from the code), while the non-coding exercises are fully covered by the many solutions of past exams. 
P.S.   It's ok to take ann before this, but a posteriori I can safely say that it makes much more sense to do the other way around 



###Distributed Systems 
Tanta teoria, argomenti trattati ad alto livello. Prof molto bravo, l’esame non è molto difficile se si studia. 


Challenging course, the contents are well beyond 5 CFU, the exam is completely theoretical (apart from a couple of very mechanical exercises) and can include question on anything that's been done during the course. Cugola is a great professor, his explanations are easy to follow but there just too many topics. There is an extra exam call in November (you will skip one of the other two calls in January/February) which is convenient. The topics are very important and I would suggest this course overall, even if getting a good grade is not easy at all. There is the possibility to do an optional project which gives you 4 extra points but it is extremely time consuming.


"I think the course is well organized and the topics are very interesting. It's mostly theory and no applications. It covers the topics of synchronization in distributed systems, fault tolerance, replication, peer-to-peer platforms, etc; and a small part on big data processing and security. Both professors, Cugola and Margara, explain the topics clearly and are always available. Slides are available but they tend to be superficial, I studied mostly from specific parts of the book and rewatching parts of the recordings.
The course follows closely the structure of the book ""Distributed Systems"" by Tanenbaum and van Steen. The exam is composed of around 5 open-ended questions and 2 trivial exercises. The course lasts half a semester (includes all 50 hours of any 5 credit course though). Grading is reasonably high, plus there's an optional project (implementation in Java or Omnet++) you can take that can award you up to 4 points in the written exam, you can choose one of the 4 or 5 available projects the professor offers. You can submit the project whenever you want, even if you have already taken the exam, the professor freezes your grade.
There's an exam call in the middle of November, however if you take it you won't be able to use both exam calls in the Winter Session, just one. "


Good course and professors. However there are solutions of the exams provided by the professors 


"The course is pretty theoretical, take it if you are interested in topics and problems about systems that are composed by different co-dependent components. The course develops into 10 main arguments about DSs: architectures, communication, naming, synchronization, fault tolerance, consistency & replication, P2P architectures, big data architectures, security-related topics and simulation. IMHO, the course is well structured and arguments are interesting, but the amount of topics covered is pretty big and lectures by prof.s Cugola and Margara provide a poor/shallow explanation of every concept. The evaluation is based on:
- an optional group project covering the simulation part that let you add up to 4 points to the overall score
- a written exam composed by 7 open questions/exercises (usually composed by up to 3 exercise and the remaining part by questions) covering the whole program except the simulation part


Exercises are easy and covered during dedicated lectures: if you find them on the exam is good, they usually help you to raise the overall mark. The main drawback of the evaluation concerns the open questions: students are required to include in the answers specific concepts that you may encounter only attending lectures, and eventually showing a deep understanding of concepts that go beyond the lectures. In case these requirements are not met, the evaluation will heavily decrease the overall mark.

The majority of the course follows the topics covered in the book 'Distributed systems' by Tanenbaum and Van Steen, therefore it may be a good reference in order to deepen your study, even if facts show that it is not necessary in order to get a good grade. Polinetwork's GitLab, Studwiz and Telegram groups are always suggested online resources in order to gather resumes done by students, past exam texts and related topics; I suggest you to take a look to them in general, also for preparing other courses.

I enjoyed the arguments of the course, not the course itself, nor the exam structure. I would like to stress the fact that the amount of topics is pretty big, that they are treated poorly during lectures, and that evaluation is not always fair from many point of views. For these reasons, overall IMHO, achieving a good grade is not that easy, therefore if you are interested in keeping a good average and covering the topics I suggest you to just read the book."


The course is very theoretical and it is coupled with the Middleware Technologies course, which is the practical counterpart; I only took this and not the other, and I personally regretted it because I felt it lacked purpose on its own


Fai tutti gli esercizi che ci sono a disposizione e quelli bastano, non chiedono cose stratosferiche. Iomi sono preparato sulle slides e mi sono trovato bene. Sui concetti teorici mi sembra che siano abbastanza flessibili, mentre sono pignoli su cose che non ti aspetti. Tipo a me e a un po' di gente, che io sappia, ha corretto la formulazione di un algoritmo perché la voleva calata nello use case della domanda



###Foundations of Operations Research
Our professor (Malucelli) is not able to teach a lesson without having someone falling asleep, but fortunately gives the possibility to increase exam's grade by additional 4 points with 10 weekly puzzles and a very easy peer grade exercise. The exam is pretty simple, if you study the exercises in a mechanical way. Trying to understand operations research theory is useless to pass the exam. The material on beep is bad as hell: using it means studying 2 weeks for an exam worth at most one week study.


Prof. Amaldi section. Very interesting course, I suggest to follow the lecture, the professor explains very well. The exam is honest, nor hard nor easy. 


"Malucelli might not be the most engaging professor but still I found the course very interesting. The course gives a complete view on OR problems, from theoretical formulations, modelling, solving algorithms and programs to solve them automatically. 
During the course the professor assigns some puzzles, doing them gives you extra points to be used to skip one exercise in the exam. Also doing a mini lab project (max a couple hours of work) allows you to skip a 4 grade exercise.
To sum up: interesting and useful course, decent teacher, doable exam. Probably the best course from y1sem1 mandatory exams"


This was a mandatory course for me, I must say that the course is full of repetitive topics, especially in the first part, so I didn’t enjoy it too much. Also, the professor Braz was really slow during the lectures and for the most of the time read the slides so it’s better to not follow her course.



###Model identification and data analysis 
I didn’t like prof Bittanti and the course too. The prof doesn’t listen at the students at all and makes a lot of mistakes during the lesson.
However he follows his book (that is free) so you can avoid to follow the lessons, but you only need to know the topics done.
The course is a bit useless in my opinion because and the grades are normalised (and it’s not rare that your grade is lower that the points done).


part 1: Bittanti is a nice person, even if it's lessons are not particularly interesting. The topics are basically time series, from a pure theoretical point of view, a mix of statistics and system theory. The exam is not hard at all.

part 2: Savaresi is much more interesting to follow, but the topics start to go too far from anything that could be useful for a computer scientist, imho. This can be considered pure system theory at the end. Interesting, maybe, but I don't think I will ever use it. Moreover, the exam was quiet challenging, especially in the online version, even if at the end he normalized the grades. 



mida1: this exam is extremely easy. The topics are just applied statistics with very easy calculations. For this same reason, it's not very interesting. 
Following the lessons is not really required / advised for 2 reasons: the professor does not speak clearly at all and there is a complete set of notes for the course. 
On the other hand, I would recommend the exercise sessions. They cover all the topics in a solid way, and they are more than enough to prepare for the exam (i'm talking about the non-covid one). 

mida2: this section is quite more challenging than the first, both for theory and practice. The topics are half way between statistics again and some kind of basic machine learning....nothing particularly exciting. 
Following the lessons can be useful and also interesting, as the professor is definitely good at it. Anyway, on telegram you can find a set of notes that cover 99.9% of what he says during the lessons. It's not an official book, but quite surprisingly he seems to follow it as if it was a script lol 
The exercise sessions are quite intense, and it's almost impossible to follow them live, but the professor uploads on beep perfect notes so...i would recommend to rely on that. 


###Artificial Neural Networks and Deep Learning
Il corso è interessante e non troppo complicato. Non serve avere basi di ML o statistica avanzata per seguirlo (io non avevo seguito altri corsi di AI prima). L'esame scritto vale 26 punti e i voti sono mediamente alti, le tre challenge valgono 6/7 punti e si svolgono tra novembre e gennaio.
Le challenge, per farle in modo almeno decoroso, portano comunque via un po' di tempo, e sarebbe bene conoscere un po' di programmazione python. I laboratori mostrano solo il minimo necessario per fare una challenge, per migliorare è necessario un bel po' di studio autonomo e di fortuna nel trovare i valori giusti degli iperparametri.


Interesting and not difficult at all. Covers a broad spectrum of topics in the field of deep learning, from basic to current state of the art. You also have the opportunity to learn tensorflow. The drawback is that you will know your grade the day before the next exam (there's an high chance). 


The course was interesting but half of it was held by Boracchi which he was not really good at explaining it. Moreover in the last year they decided to make the exam more difficult wrt the previous years and take a good grade is not more easy.
The exam is composed by the write part (20 points) and 2 not mandatory challenges (5.5 points each)



###Informatica e diritto
Corso molto interessante per avere un'idea di come funzionano le cose a livello legale. Precedentemente tenuto da Triberti e Perri (di cui il primo è però ora in pensione ) che venivano entrambi incontro alle esigenze degli studenti e con cui è facile prendere un voto alto


###Foundations of Artificial Intelligence
I've taken the course with professor Colombetti (now retired), but he only covered half of the course, the other half was taken  by professor Amigoni. The course covers search algorithms (for intelligent agents). It's not hard and if you are interested in algorithms I will suggest it. The course is easy, but you have to be very precise in the exam. Following lectures/ex. session may help, but the material was enough to study by yourself. 


Amigoni was good at explaining the course. The course is only theoretical and it’s more about trees and algorithms.
The problem is that the time in the exam is very short (online).


This year the course was held by both prof. Colombetti and prof. Amigoni, alternating in the online lectures for both sections, with prof. Restelli for the exercises. The course covers the classical techniques of early AI, they are somehow ancient, but I think they can be still useful and it would be crazy to ignore them, while learning ML and NN. The exam is not hard at all, even if the online version was a bit harder due to the restricted time and the difficulty of writing some types of exercises in a form.  At the and I suggest it, but if you have something more interesting you could decide to skip it.


"I had prof. Amigoni, but the real mind of the course seemed to be prof. Lanzi (for which this was the first year teaching it). Before the exam I would have said that it was great, lessons are easy to follow, topics are interesting and exercises are easy to learn.
From the last year they added some topics (e.g. reinforcement learning) but this was not a big deal.
The problem came with the exam itself (I did the first call), prof. Lanzi decided to reduce the time from 90 to 75 minutes without reducing the complexity. At the exam we discovered that he would have assigned negative points to wrong answers (that seems crazy for exercises as you tipically do not try random answers), this caused more than 1/4 of the students to withdraw scared of skipping the following call if their grade was below 10.
On top of it, they took 16 days to publish the grades (and they did it only when contacted by the student representatives) 7 days before the second call.
I hope that next year something will change."


Very interesting course, but this year the exam is quite different and questions are extremely vague (nobody knows why), so the exam evaluation is a mystery. The exam is neither equal of what you see at exercise sessions nor equal at past exams, but harder. Professors are also very disorganized. Not suggested at all.



###Software Engineering 2
One of the most useless course of these 5 years. The mandatory project, which now should not be mandatory anymore afaik, was very time consuming and you took home very little in terms of learning (it's pure theoretical). The written exam was rather easy, but the topics are really bullshit and the lessons are very very boring. 
There was the possibility of doing a research project instead of the written exam, I did it but it turned out to be much less interesting than what I thought and very time consuming. There was also the possibility of doing the implementation of the mandatory project, but for sure it's not worth the time it requires, compared to the written exam. 


Consigli su come approcciare questo esame? Non ho seguito nessuna lezione e devo fare l'esame intero >>> With old thesis. I didn't study even 10 hours in total and I passed it good



Questo fa parte di quegli esami del cazzo in cui tutti hanno approcci diversi: La cosa più intelligente da fare sarebbe aggiungere cose sulle slide se proprio vuoi secchiartela. Io da buon ingegnere me ne sbatto il cazzo e faccio finta di seguire le lezioni mettendole a 1.75x; Sulle esercitazioni mi concentro un po' di più, ma a questo punto dell'anno è solo per farmi una idea. In sessione si rileggono le slide con attenzione, ti rifai tutte le esercitazioni, ti spacchi di temi di esame (questo esame in particolare ha svariati anni addietro quindi ce ne sono un botto). Se vedi che hai difficoltà a fare i TdE, integri quel concetto con il libro [mai fatto]. Se vuoi secchiartela al massimo, puoi prendere appunti al PC per integrare dalle slide, fare gli esercizi prima delle esercitazione e fare domande in presenza, ma considerando quanto sono una palla gli argomenti preferirei farmi crocifiggere che fare una cosa del genere


1 - è openBook, fai più temi d'esame che puoi e portateli
2 - fai Alloy, è pressapoco certo che ci sia
3 - JEE sembra complicato ma nella pratica è molto snello da fare, trova un esercizio svolto e fai reverse-Engeneering
4 - Project planning sono sempre le solite quattro formule, trovale e scrivitele


###Logica e algebra 2
Se vi piace la materia il corso è molto interessante e Frigeri a mio parere è un ottimo professore. L'esame è veramente facilissimo, è un orale in cui si devono portare 10 dimostrazioni a scelta su tutto il programma. Inoltre il prof è molto alto con i voti


Corso completamente teorico in cui vengono dimostrati solo teoremi. Tuttavia all’esame (orale) si portano solo 10 dimostrazioni a scelta e i voti sono alti



###Internet of things
Ho fatto IoT nell'anno accademico 2019-2020 e la valutazione era divisa in 25 punti con l'esame, 5 punti di Home Works opzionali e 3 punti di progetto facoltativo. (Quest'anno penso fossero 4 di HW e 4 di progetto)
Gli HW e il progetto non erano niente di difficile, l'esame secondo me era standard (Se ti fai le esercitazioni e riguardi i TDE vecchi, sai già cosa aspettarti).
Se fai tutti gli HW il progetto secondo me non è niente di difficile. In 2 / 3 giorni io l'avevo fatto, la parta più difficile era quasi scrivere il report perchè lo voleva di sole 3 pagine con intestazione.
Gli esami sono simili ai vecchi TDE, i V/F si ripetono e gli esercizi sono della stessa tipologia e se ti alleni un po' prendi un bel voto. 


Corso piuttosto semplice e in cui è facile prendere un buon voto. Gli argomenti sono interessanti ma ai fini dell'esame vengono trattati in maniera abbastanza superficiale. Il voto è composto da 26 punti dati dall'esame scritto, 4 punti da challenge (sono 4 tutte abbastanza semplici) e 4 da un progetto. Chi segue anche Wireless Internet può fare un unico progetto valido per entrambi i corsi. Per quanto riguarda l'esame scritto, gli esercizi sono estremamente meccanici e si ripetono. Altra nota positiva: il numero di appelli in un anno è 6 e non 5 perché il prof organizza un preappello o un esame extra a settembre.



###Digital Forensics and Cybercrime
Il corso è interessante e ben spiegato, anche se mette insieme argomenti anche distanti tra loro. Purtroppo (a mio parere) gli argomenti sono trattati in modo poco tecnico e con una sola dimostrazione pratica in tutto il corso.


The course is held by Zanero which speaks about cybercrimes and the second part is held by Carminati which deals with machine learning for their detection. The first part is very interesting, while the second one makes less sense because Carminati tries to speak about ML in few lessons very fast (and sometimes the topics are not really related with this course). 
Zanero invites a lot of guests who work in this field, but the course is only theoretical.


###Computer graphics 
+ weekly homework to check your comprehension (they are requested during the oral exam)
+ interesting final project (a small videogame), in which you can freely try the techniques learnt
+ professor Gribaudo is very clear in his explanations, and his material is complete and clear
+ at the exam you are only asked questions about your code: if you are fluent with coding and interested in the topics you can easily get a high mark
- speaking as an engineer, I would suggest the course to designers only if they have a minimal prior knowledge about programming (but the professor is more flexible with people who never coded before).


professors gribaudo and stella, webgl is the technology studied in the course and used in the project, the exam grade is based on the homework assignments (one every lesson, but they are not hard, the first few are trivial even) and the project which is an application that you have to develop (teams 1-3 people) to implement everything learned in the course. the projects do not have any strict requirements, they just give an idea (like "develop a platformer like game where you can make and play levels") and everything else is up to you so you can develop whatever you want. 3D assets are provided for the projects, but you are not limited to those. the theory of the course is 3D geometry, transformations, cameras, quaternions, textures, scenes, animations, light models, brdf models, phisical based rendering then also shader coding with glsl. there are slides which are good, there is no course book. examples of applications and code are provided. recommended if you are interested in graphics, low level graphics, game design. the course is open to the computer science course and also to the design course.

###Design and implementation of mobile applications
È un corso in cui il prof fa una carrellata rapida dei possibili linguaggi e framework per realizzare un app, quindi dal mio punto di vista si può tranquillamente non seguire. L'esame consiste nel fare un App che funzioni su almeno due device (es. iPhone e Apple Watch). L'App si può fare da soli o in gruppi da 2. Viene data carta bianca, ma il prof chiede comunque che gli si mandi prima una mail con una descrizione dell'App, gli screen che la comporranno, external services, etc..



###Wireless internet
WI arrivava a 28 punti con l'esame e 4 di progetto opzionale, i progetti niente di complicato, puoi scegliere tra quelli che ti propone lui o addirittura proporne uno tu in tema con il corso. L'esame è molto standard. C'è un po' di teoria da vedere ma se ti rifai tutti i temi d'esame vecchi, praticamente capisci le domande che fa e gli esercizi che presenta.



###Game theory
I’ve taken the course with prof. Lucchetti. 
The course is emi-semestrale, so last from September to November but uses 8 hours a week. The first exam session usually is in November during the mid-semester break, so it can be nice. 
If you like math and probability topics are quite interesting but I think they are not really correlated to computer science. Anyway, you don’t need any prior knowledge apart from a little bit of probability. 
Lesson and especially exercise session are useful, but in any case slides provided are good.
The exam is made by exercise similar to the ones proposed during exercise session. It’s quite easy and marks are generally very high. 
I suggest you this course if you miss 5 CFU and you want to enlarge your knowledge and maybe also push up your final grade.


"Very interesting topic, the lectures are not boring and the exercise sessions are very useful.
It's not really pertinent on IT (it's more abouth math/statistics/strategy) but I still find it really useful for a personal growt prospective. It gives you a better understanding of many real world fenomenons. 
The exam it's easy (i think 1/3 of the class got 30) and can be taken in early november (the course is emimestral)"


Great course, it is very simple and getting a high grade is not difficult. the exam itself is pretty standard and just by following the exercise sessions you may be able to pass it, still I suggest studying for it. it has an exam session in novembre (if you do the exam then you won't be able to do one session in January/February) and that's very convenient in order to have less exams in the upcoming session. Lucchetti is a good professor, I found his lessons interesting but when the time of the exam comes closer he gets a bit angry, maybe even passive aggressive in his emails. Definitely a course I'd recommend, the contents are basic but important mathematical concepts. 



###Business Information Systems 1
Esame che tratta argomenti molto a grandi linee, e poco tecnici. Esame a crocette quindi è sempre un punto di domanda per il voto.


The course is very similar to "sistemi informativi" held in the bachelor at PoliMi, so the topics are not interesting even if it must be said that professor Francalanci is, in my opinion, really good at explaining. It's all theoretical and the exam is quite easy (cross questions) even if for each question you can get just 4 or 0 points, so one mistake it's enough to lose all the 4 points. There is just a little project to do, it does not give any point but it is mandatory, it's a work that you can do in 2/3 days, nothing difficult.



###Technologies for Information Systems
The course is not bad, I think it's easy to pass it with an high mark. The topics are quiet interesting, but at the end you won't have learnt too much in my opinion, due to a superficial approach to all the interesting topics, with exercises quiet mechanic and boring. The communication part can be interesting. Take it if you want an easy course or you don't have anything more interesting to choose.


Esame semplice, argomenti non così complessi e neanche così interessanti. Classico corso per tappare un buco.


The course topics are interesting, but the approach is too vague and theoretical and at the end I didn't learn too much. The exam is relatively easy, so I suggest it only if your are looking for something easy. Do not underestimate the Communication part, it's just a pass/not pass, but you have to write a good summary to pass it. The most interesting part were the 3/4 seminars held by other professors, which where outside the course program anyway. 


"The course was held by prof. Tanca. I don't advise following the lessons are they are not so interesting and in my opinion the slides are enough to study the theory part.
For the exercise part, the exercise sessions were really good (prof. Azzalini) and I think are a very good starting in view of the exam.
The exam is composed of 2 parts, 10 pts for the theory with closed and open questions (prof. Tanca is really strict on the correction of the open parts) and 22 pts for the exercises.
Good exam if you want to get a good grade with low effort but I think that the topics were not so interesting and are difficult to be used in the real world."


The course covers the basics of data engineering: the two main topics are data integration and data warehouses, few but fundamental concepts, pretty easy to follow along and master before the exam session. Theory lessons are mediocre, as opposed to exercise sessions, which are very helpful for solving the exam exercises. There is an extra communication part (2 lessons) which is nice to break the monotony and is evaluated with a pass/non pass writing exercise (summarizing a scientific paper). There are some overlaps with data mining. Definitely suggested if you are interested in the topics or you are looking for an honest 5 credits course.



###Digital innovation lab
All’inizio del corso il prof propone tre tematiche su cui poi si andrà a svolgere un progetto “innovando” una delle tematiche proposte.
Durante le lezioni, per la prima ora spiega e poi da il tempo di applicare al progetto quello che ha spiegato prima.
(Ad inizio lezione a volte fa presentare a che punto sono arrivati alcuni gruppi, a giro).
Alla fine del corso bisogna fare un esame e una presentazione davanti alla classe del progetto con l’idea, i vari step fatti è una parte di analisi di dati(clustering/classification) sulla base di DataSet che possono essere o creati dal gruppo, o trovati online.
(Bisogna consegnare anche un report contenente tutto spiegato).
Il progetto vale il 90% del voto, l’esame il 10%.

###Control of mobile robots
Se sei un informatico mi sento un po' di sconsigliartelo: il corso è pensato per automatici, quindi un bel po' di cose vengono date per scontate. Se hai fatto "fondamenti di automatica" in triennale riesci comunque a destreggiarti un pochino però non è affatto immediata come cosa. Agli studenti di ing. informatica il professore (Luca Bascetta) propone "sottobanco" un progetto da fare con ROS. L'alternativa è farsi l'esame come tutti, cosa che io ho fatto, però per un informatico devo dire che c'è un gran lavoro da fare su. Altra cosa che avrei voluto sapere prima di fare il corso: su beep ci sono i temi d'esame, ma solo un paio hanno le soluzioni. L'esercitatrice è pessima a dir poco, gli esercizi svolti sono davvero demenziali e non rispecchiano la difficoltà dell'esame. I laboratori sono inutili, l'esercitatrice (Basak Sakcak) entra in classe e ti dà una serie di esercizi da fare con matlab simulink, e sta li solo per chi ha domande. Per altro, matlab capita all'esame una volta ogni morte di papa.
Gli argomenti del corso sono molto belli secondo il mio modesto parere, ti danno gli strumenti per comprendere come impostare e risolvere dei problemi di navigazione autonoma dei robot mobili.

Innanzitutto, il corso è pensato per automatici, quindi un bel po' di cose vengono date per scontate. Se vieni da altre ingegnerie, se hai fatto "fondamenti di automatica" in triennale riesci comunque a destreggiarti un pochino però non è affatto immediata come cosa. Il programma prevede cinematica (algebra lineare e geometria devono essere chiare), dinamica (fisica e meccanica vanno masticate), planning (semplice per un informatico, difficile per gli altri) e controllo (semplice per un automatico, difficile per gli altri). Tenere bene a mente questo prima di avventurarsi in questo esame.
Altra cosa che avrei voluto sapere prima di fare il corso: su beep ci sono i temi d'esame, ma solo un paio hanno le soluzioni. L'esercitatrice è pessima a dir poco, gli esercizi svolti sono davvero demenziali e non rispecchiano la difficoltà dell'esame. I laboratori sono inutili, l'esercitatrice (Basak Sakcak) entra in classe e ti dà una serie di esercizi da fare con matlab simulink, e sta li solo per chi ha domande. Per altro matlab, pur avendo una buona percentuale di ore del corso dedicata, capita all'esame una volta ogni morte di papa.
Gli argomenti del corso sono molto belli secondo il mio modesto parere, ti danno gli strumenti per comprendere come impostare e risolvere dei problemi di navigazione autonoma dei robot mobili. Prendere in considerazione la possibilità di fare il corso solo se si è fortemente motivati e interessati all'argomento, non è di sicuro un esame per riempire buchi e per il quale è sufficiente scriversi due appunti. Non vi aspettate di vedere qualcosa di pratico perchè non è così, il massimo della soddisfazione sarà guardare qualche grafico

###Fundamentals of multimedia signal processing 
The course regards the way in which the multimedia signals are processed and trasformed. It is divided in 2 modules. The first one is more therotical, the second one is focused on the application. In the exam it is required to do exercises and write some easy portions of Matlab code. The course is quite easy but the material provided by the professor is not so clear. 

###Soft computing
The course is made of two parts, in the first part is on fuzzy systems and genetic algorithms; the second part is on graphical models, bayesian networks (also hidden markov models). Take this course if you are interested in artificial intelligence. The exercises on the first part are about designing systems with the studied tools: a generic problem is provided and a solution has to be modelled, there isn't much theory, it is important to learn the motivation of the design principles and decisions which comes with a bit of experiece (can be acquired during the course, there are no pre requisites). Matlab can be used for fuzzy systems, there is a lab, but it is not part of the exam (it can help with preparation a bit). The second part has a bit more theory and exercises are about applying algorithms such as variable elimination, junction tree or reasoning about graph separation. Course material is very limited, especially in the first part, maybe because it is a new course. Overall: not too hard, quite interesting, recommended.


The part of Bonarini is terrible: you learn very little, he is quiet boring and he basically explain a few basic concepts in a large amount of hours. Moreover his part at the exam is strange, you need to be in his mind and try to have a bit of fantasy. The material is basically absent, so in any need case you cannot study too much because there is nothing to study on.
The part of Matteucci is much better, this exam part is harder, but honest. 
Anyway I would not recommend the course at the end. Even the part of Matteucci is not so useful nowadays and you can learn it somewhere else if you should really need it. 

The course is divided in 3 distinct chapters:
1) Fuzzy logic (Professor Bonarini). This is about modeling uncertainty in a human-friendly way. Definitely interesting in general, but all the concepts could be covered in like 3 hours. 
This makes the lessons terribly boring but I would sadly recommend them as the slides are not enough to understand. There are practical sessions in which students are invited to test their modeling skills. It's worth taking part at the final one, just to understand how he wants the exercise to be made during the exam. 
As I said, it's all about modeling skills, almost 0% practical. There is just an hint at some Matlab but it's not relevant.

2) Genetic Algorithms (Professor Bonarini). Consider this just as an INTRODUCTION to GA. This chapter is about getting to know the basic components of such approaches and, again, developing some modeling skills around that. For this section there is literally 0% practice, not even the matlab. This was particularly disappointing as at the end it feels like you could have learned more from a 30-minutes youtube video. 
Following the lessons is recommended for the same reason as above: the slides are not "readable" by themselves.

3) Bayesian Networks (Professor Matteucci). Notice that for this chapter there is a new professor. This part of the course is definitely worthy! Bayesian networks are an interesting approach to modeling uncertainty, widely used in different areas. The topic is covered at a satisfying level. 
Following the lessons is not required (the slides are good) but recommended for 2 reasons: they're interesting and they're the only way to see exercise examples. The last part is important: there are no exercise sessions for this part. This means that one must rely on the single example shown in class to understand each algorithm. The solutions of past exams do not contain much information.

Getting a good grade is usually not so difficult if you do the exercises as Bonarini wants them. 

###Advanced user interfaces
I won't consider it a good course. Lectures are all quite useless to pass the exam since the topics are related to "soft skills". The exam consist of a group project: the only help you could get comes from tutors that are in the lab, so at the end of the day you are pretty much left by yourself. Tutors are overall nice and kind peaple, but that's not enaugh to give this course a good rate. Project scores are assigned by both tutors that followed you and professor,and generally scores are pretty high

###Computer Security
In epoca covid l’esame ha inutilmente triplicato la sua difficoltà diventando più una corsa contro il tempo che un esaminare le competenze dello studente.

very interesting course (even if this is not my favorite branch of computer science), I like the hands-on approach, even if I have to say that the challenges are not really worth the 3 bonus points they assign (they should be like 6). The written exam is not easy, but if you practice with the old exams it should not be too hard. I followed with prof. Carminati, but prof. Zanero should be pretty good too. 

###Hypermedia applications
+ useful if you never approached web design and development
+ 1+1/2 projects (no presentation): design and development of a website (the main one), and usability analysis of another site (quite useful and short, but also boring)
+ I wouldn't suggest doing the projects alone, also to split the boring parts. We were in 4
+ a lot of tutoring sessions for assistance on the project
- attending the design classes is useful to avoid going too much out of the schemes: you are explicitly required to make your design work as standard as possible (yes... standard design...)
+ attending programming classes is useful if you never used certain technologies, but not mandatory
- I found the theoretical part (design) to be quite boring and old style
+/- you must follow quite strictly the rules you are given and you are given continuous feedback from the tutors, so there is not much space to do things wrong
- periodically check the course calendar, because the deadlines are often reminded very late

###Economics and computation
The course covers various topics in the area of game theory. It partially overlaps with the Game Theory course, but I strictly suggest to take the Game Theory course before this one, otherwise many things could be hard to understand. All the lessons are pre-recorded videos on youtube and there are some live lectures for questions. The lessons are a bit boring and the course is very theoretical, unfortunately they don't present any practical application of the topics (which could  be very interesting imho). So be prepared to theorems, proofs, definitions and so on. The exam can be taken in different ways:
1. a written exam which assigns 27 points + 5 points of the last question on advanced topics, which are topics presented in the lectures notes but not in the videos.
2. 4 midterms + 4 challenges, each of which after 4 weeks, on a part of the course. The midterms assign 27 points, the challenges 8 points. 
3. 4 challenges + a written exam of 27 points
The challenges can be done in groups. Imho the challenges are really hard and time consuming. Note that they are a theoretical research on advanced topics not covered in the course, nothing practical. They are worth only if you are very interested in the topics.
The written exam is feasible, but it's still hard to prepare due to the large amount of topics and the level of detail required. 
At the end I would suggest the course only if you are really interested in game theory, you have already taken the game theory course and you want to go a bit more in deep.


###Advanced computer architectures
The following comment refers to the class of prof. Santambrogio. Unluckly the syllabus and the exam are different between the classes (at last one year ago), so you can't think to follow another class. In my opinion the course was very bad. I was not particularly interested in the topics, but the way in which they were presented made them completely useless. Many lessons are wasted talking about nothing and the end I took home very few concepts. Moreover, the material was horrible, many slides full of errors, no past exams. There were different ways to pass the exam, a written exam, an oral exam and a project. I suggest the written exam, which is not hard at all per se, but pay attention that he corrects in a crazy way and a small error can make you loose half the points. 


###Formal methods for concurrent and real-time systems
The course follows a blended modality. First, professor San Pietro explains the main topics of the course, then a list of academic tools and research papers is given. Students can divide in teams of 1-3 people and choose a tool/paper. In late April-May, each group presents the assigned tool to the other students and the professor, with a focus on why it is important for the course and a live demo on how to use it. This presentation gives about 20 pts. A final homework, to be delivered by early July, is presented. It consists in the modeling of a real time system (this year using UPPAAL), together with the verification of some properties. A report of the work done is also required. The homework gives around 10pts. Two weeks should be enough for the homework (presented in May).
Grades are generally good, the course requires some effort during the semester, but they are rewarded. 
I found the topics interesting, even though they are not strictly required for the tool presentation. The homework can be challenging, especially since UPPAAL is quite bugged, but the teaching assistant (Ing. Lestingi) is helpful in solving problems.
An oral exam on the course theory can be taken instead of the presentation&homework, but I do not suggest it.
Overall, I suggest this course to people who want to find out more about the methods used in projects that require an absolute correctness, such as NASA rovers. 

###Advanced Algorithms and Parallel Programming
The course is very interesting if you are interested in algorithms and parallel programming. The course is divided in two part. The part of AA is held by prof. Ferrandi and it's mainly about randomized algorithms, randomized data structure and some analysis methodologies for randomized algorithms. You have to be interested in the topic (take as a comparison the second part of the API course) otherwise it will be boring and tedious. The professor is not exceptional, but the topics are hard to explain in a catchy way. The second part is taken by Serena Curzel and talks about CUDA/openmp/posix threads and other technologies like Halide. You will learn how to program with different techn. The second part is very hands on and you will also have the opportunity to gain a certificate from NVidia on CUDA. The exam is divided in two modules. The AA part is composed by 3 questions and they are easy (also they are not "new", if you look into past exams you will probably find the questions of your exam). I've personally not taken the PP written exam because I did the project instead. You can skip a written exam (of 1 of the 2 parts) by doing a project. I'd suggest it only if you are really interested as preparing yourself to the written exam is easier. You can also do 4 challenges to gain 0.25x extra points.   


+ generally interesting
- some parts are just enumerations of millions of variations of always the same concept, but "luckily" they are not asked
- the slides are not always complete or comprehensible (because of layout bugs that I guess won't be ever fixed)
- the instructions for the exam were never clear. JOIN the telegram group, because some important news come only from other students
+/- there are projects/homework during the course, but they are worth basically nothing (1 cumulative point for hours/days of work). I suggest to do them anyway to see some concepts in practice
+ Interesting and well done the part of Erica Stella on Cuda. It's a NVIDIA online course that we have for free by attending AAPP
- the projects during the year 2021 were given unreasonably late. The perception was that two papers were randomly extracted last minute and given to us to work on. Not worth the time and not particularly useful, as they are an extension of the homework 


Very interesting course if you like the topics. The part on the advanced algorithms is mainly based on randomization algorithms and something on DP. In the part on parallel programming, we saw OpenMP, MPI and PThread, mainly through exercise sessions, and some patterns. The AA part is mainly theoretical, while the PP part is more practical. During the semester we had the possibility to present some work(challenge) by writing some program that implements a specific algorithm. For each challenge, you can skip the corresponding question at the exam (and take the full mark if you did good work). The professor quietly disappear during the last part of the course ( the results of the challenges were published just one day before the exam), but I still think the arguments were presented in a good way. The exam is divided into two parts (you can take them separately) and generally, the marks are good. Not many people follow the course.


Il progetto lo si fa entro la prima sessione d esame teoricamente: All inizio fa finta sia un progetto di gruppo nel linguaggio che vuoi. Alla fine se ne esce con progetto singolo in c++ Prepararsi per l esame è molto più facile che fare il progetto soprattutto se come me non hai mai usato c++



###Technologies for sensors and clinical instrumentation
Argomenti interessanti e molto dettagliati. Prof Aliverti bravo e spiega bene. Materiale completo e abbondante (anche su Andreadd). L'esame è duro da preparare perchè gli argomenti sono tantissimi e stradettagliati. Il progetto (Arduino) porta via abbastanza tempo. Esame scritto sia pratica che teoria ed orale obbligatorio, per chi ha lo scritto sufficiente, con correzione dello scritto e domande extra per alzare di due punti il voto.



###Segnali per le telecomunicazioni
course in ITALIAN only. il corso è da 10 cfu e può essere usato per coprire i requisiti INT1. E' interessante per quanto sia più nell'area matematica/fisica che quella informatica (si parla di Trasformate di Fourier principalmente), Prati è molto bravo, tiene lui sia lezioni che esercitazioni e quindi sono ben coordinate e seguirle è molto utile. C'è un libro da lui scritto a cui fare riferimento, e una decina di anni di temi d'esame con le soluzioni. Fa anche un appello extra a inizio giugno. L'esame presenta sempre la stessa tipologia di esercizi e se si fa abbastanza pratica è fattibile prendere un voto alto.



###Image analysis and computer vision
+ interesting topics. You learn to manipulate images and extract features from them
+ the exam is a project + oral. You can skip the oral completely or partially with the midterm project
- professor Caglioti slides are incomprehensible. They look like early sketches of a lecture
- schedule... inexistent?
- during year 2020 you had to write an email to the professor every time you needed a recording, as they are not published anywhere. Some were not recorded
- professor Caglioti is super messy. Explanations are clear, but what he writes are hieroglyphics. Even the slides have a weird order
+ Boracchi is instead very clear, and publishes his material on his public site. He covers again topics already taught by Caglioti, but it is very helpful



###Data intelligence applications
The exam is 17 points for a project to be made in groups of about 4 people, on one the proposed tracks, each of which covers 2 of the 4 topics of the course. The remaining 15 points are obtained with a written exam on the remaining parts of the course. All the topics are interesting, even if the lessons are pre-recorded on youtube and a bit boring. Often they don't go too much in detail. The written exam is easy, the questions are standard, while the project is challenging because it's hard to understand what they really want and the teaching assistant (Bernasconi de Luca) is of little help. Anyway I suggest to take this course if you are interested in the topics. 



###Computing Infrastructures
The performance part is kind of ridiculous, don't waste time following its lessons, read the slides, learn the bunch of formulas which are requested and do some exercises (which are an almost trivial application of these formulas). 


The technology part could have been interesting, but is presented in a very superficial way, loosing a lot of times on bullshit (like hard disk exercises). 
The exam is made of closed questions only, very stupid way to examine imho. 
It's rather easy at the end, even if a small error can cost you more points than what it should, due to the closed question format. 


Il corso potrebbe anche risultare interessante, per chi è interessato a comprendere come funzionano i datacenter nella loro interezza. Ma la modalità d'insegnamento lo rendono uno dei corsi più inutili che abbia mai fatto. Specialmente le modalità d'esame. Gli esercizi sono meccanici e l'esame è a crocette. Potresti prendere 30L senza aver capito in realtà una mazza, oppure essere bocciato perché le domande non testano le tue conoscenze, ma la tua fortuna nel ricordarti che la lunghezza di un rack è 44.45mm (è una delle domande da vero o falso). Se vuoi un esame facile ma randomico, è perfetto


###Cryptography and architectures for computer security
The course is very interesting if you like security topics. The material is quite good. However the exam is very difficult especially if you have never worked with modulus and discrete math.

###Computer Security
The course is well organized and well taught, prof Zanero tries to be witty and to keep the students engaged in the lecture. The lessons cover a series of topics with a major focus on stack exploitation and web vulnerabilities (sql injection, malicious scripting, request forging). The slides are just for reference and I personally relied on notes and recordings.
The post-covid exam is quite complex.

###High-tech Enterpreneurship
Not recommended. The professor (Gaetano Colombo) and his assistants (Julian Giessing and Anna Souakri) are almost useless, same for the lectures. The only few and useful things you can learn are the ones related to the project (and you learn them by yourself) .  The material of the course is not very good. The only difficulty of the course is trying to understand what is required for the project by yourself and which are reliable sources of information



###Baesyan Statistics
"This subject is very interesting, and the course very broad. However, I found the teacher to be not so clear, and the subjects quite tricky (especially if you did not have any statistics course before). On top of that, the structure of each lesson may not appear clearly, as the Prof does not emphasize it... The project can be extremely time consuming, but very enriching, try to find good teammates asap.
The exam is of variable difficulty, several examples are provided. They follow (usually, but not always...) the same pattern, with some classical questions and some ""lesson"" question. 
Overall, a very cool subject, sometimes poorly presented, and not so easy to pass the exam. Use open resources on the internet to help your learning to benefit the most from the course!"



###Data Bases 2
"Not so interesting, doable exam. This year the exam indication came very scarcely and late. 
The best way to approach it IMO is to follow the exercise sessions, read on the slides and do some old exams."


Non è difficile quanto che non ha senso, ogni esercizio è a sé e devi avere culo per avere l'intuizione giusta. C'è poco da studiare o capire. Poi non mi motiva molto studiarlo dato che mi sembra una roba specifica per chi deve costruire software di database, non so perché è un argomento di un corso obbligatorio



###Complessità nei Sistemi e nelle Reti
"Corso molto interessante, il professore sa spiegare e far mantenere bene l'attenzione.
L'esame è abbastanza standard, il professore è MOLTO puntiglioso sulle correzioni, soprattutto sulla teoria. 
Si può ottenere punti bonus esponendo un paper, vedi qui: https://piccardi.faculty.polimi.it/csr.html"


"I chose this course because it was in the INT1 tab and we have to choose 15 CFU from it.
The course is not difficult to follow, lectures are in italian but slides in english and they are enough to study it. The topics are related to the networks and how they work.
The exam is a bit difficult (not so much) because the professor Piccardi wants that the student is very precise when he does it. It is made of 3 practice exercise where you have to apply some formulas, 2 open theory question and 3/4/5 closed questions (the number of them depends on what the prof decides). This is the first academic year (21/22) that he makes an exam like this."



###Natual Language Processing
The new version of this course (2021) is very focused on theory about NLP; there are two types of lessons: some on NLP aspects (hold by the professor) and others about the main deep learning techniques for NLP (hold by her assistant). There is also an optional laboratory part (if you follow all lab lessons, you gain 2 extra points for the exam) in which some Pytorch code to solve NLP problems is showed. Lessons are not fundamental to pass the exam, but can be useful to understand some difficult topics. The exam is made by 9 open questions about the NLP and/or the deep learning part (no questions on laboratory). Questions are very specific, you need to know the theory very well and may require to invent examples. The main advantage is that it is emisemestral, so you can do the exam on November call and avoid doing it during the winter session.



###Systems and methods for big and unstructured data
The course is divided in theory and exercise lessons. In the theory part you study big data, NoSQL solutions (graph, documental, columnar, information retrieval and key value databases) and something on Hadoop. In the exercise sessions, the prof shows you how to use these tools in practise by doing queries. To pass the exam you need to do 3 small group projects (from october to january, worth 30% of the mark) using the NoSQL technologies explained during the course and a theory/practical part (worth 70%) where you need to answer theoretical questions and do queries/design a NoSQL solution. The course is really interesting, the prof is good at explaining things.


+ Interesting topics, it covers the main technologies used nowadays for big data 
+ not difficult, it is worth 5 CFU and grades are fair 
+- the 30% of the grade is assigned by 3 little projects that will only waste your time, very easy assignments that do not teach you anything 
- all the topics are covered in poor detail, at the end of the course I feel that I only learned that those technologies exist and how to perform some queries 
- the final exam evaluates stupid skills like your ability to sketch an E-R model that takes 30 minutes itself and the for rest of the exam you will have to hurry in finishing the last 4 pages of questions.
In conclusion I do not suggest this exams if you are searching something interesting that upgrades your knowledge."


The main topics of the course are interesting, but basically Brambilla's lessons are composed of like 3 or 4 concepts which he continues to repeat going on in the slides. To get the full grade one has to take part to the projects' deliveries (worth 30% of mark/around 10 points). Tocchetti's exercise sessions are really useful to prepare for the written part, even considering that, for now, the exam is really poorly organized.


The course is really interesting because many types of databases are studied, but the number of hours isn’t sufficient to understand well all the features. Also, professor Brambilla, who made a very exact course planning  at the beginning of the semester, ended up delaying everything the project included. 



###Theoretical Computer Science
I took the course with prof. Morzenti because it was mandatory for me (bachelor degree in another university). I think that this is a useful course, it teaches you the theoretical fundamentals of computation and complexity; it is pure theory and at first sight it may looks hard to understand but if you take your time it is quite simple (the computability part is the most tricky one). I suggest to do reverse engineering following the exercise sessions (you will get 80% of what you need to pass the exam) and then if something is not clear you can study that particular thing on slides or re-watch recordings.



###Numerical Analysis for Machine Learning
It's a course with two faces: it's by far the most interesting course I have ever had, but also by far the most difficult one. It covers a large range of topics of machine learning, both theoretically and practically so it is very useful. I suggest attending it but you must be conscious of a couple of things: it is based on a lot of algebra so understanding every theoretical thing is quite hard, and there's no material provided by the professor, so you must attend all the lessons and rely on indian guys on youtube. Prof Miglio is good at explaining, but also impossible to contact via mail (he never answered to my multiple emails in months), prof. Regazzoni is good and his exercise lessons must be followed. The exam is split in multiple parts: 8 cfu are given by the written exam, which summarizes all the things treated in theoretical and exercise lessons, and 2 cfu by the project, which doesn't require a lot of time luckily. If your grade in the written exam is greater than 28, you have to do an oral exam about all the theorems and demonstrations of the course, but you can choose not to do it and your grade will be lowered to 28. Giving my own opinion I suggest you to attend it because I think it's so useful and interesting if you want to improve your machine learning knowledge, but as mentioned before, be conscious that it is not the best choice if you want an easy semester.


Very very interesting course, it’s really hard in my opinion, but it is a pure mathematical course and the professor expects the students to have done a Numerical Analysis course previously, thing that I didn’t do during the bachelor degree. For the 10 CFU course there is also a mandatory project that can be done with another person, it’s really useful to clarify the concepts in your mind.


"Is a very interesting course but is very difficoult. The topics range from Machine Learning to Artificial Neural Networks where all the mathematics behind them is explained.
The professor is good at explaining but sometimes assumes the knowledge of some topics, which however is not always present.
The labs follow the topics of the theoretical lessons and are focused on implementing machine learning algorithms and Artificial Neural Networks using Python.
The written exam has a maximum grade of 28. To get a higher grade you need to take an oral exam. There is also a mandatory project to do during the year"



###Bioinformatics and computational biology
Corso interessante per le tematiche trattate se si è interessati alla bioinformatica. I principali contro sono: 1. professore poco coinvolgente durante la spiegazione 2. Corso troppo denso con esercitazioni che sono praticamente ulteriori lezioni 3. Dipersività del materiale con intere slide che spesso presentano un alto volume di informazioni e non sottolineano veramente i concetti fondamentali.



###Bioninfarmatica e genomica funzionale
Esame molto interessante. La Professoressa è estremamente chiara nelle spiegazioni e ci tiene che gli studenti comprendano i vari concetti che sta spiegando, anche ripetendosi più volte. Le esercitazioni prevedono l'uso di Matlab e consistono nell'applicazione di alcuni concetti che sono stati presentati durante il corso. Per quanto riguarda l'esame, la professoressa non fornisce temi d'esame e bisogna un po' andare in giro per ripescare qualche esempio e nell'esame è molto facile perdere tanti punti dovuti a piccoli errori. Sottolineo inoltre che all'esame è presente anche Matlab, quindi è caldamente consigliato avere dimestichezza con il linguaggio. ATTENZIONE: L'esame per noi informatici fa parte della tabella BIO che purtroppo non è presa in considerazione nell'ottimizzazione delle date d'esame. Questo potrebbe comportare una sovrapposizione o comunque una data molto scomoda rispetto agli altri appelli.



###Advanced Operating Systems
"This was the first year of prof. Zaccaria, he seems a good person but his lectures are impossible to follow, (for example he explains complex things like OS algorithms only looking at one diagram) at the end of the course I could count less than 10 people in class and no one seemed to be actively following him.
The arguments are interesting but in my opinion too many for 5 CFUs, considering that in the exam he also asked questions on seminars that were held by external guests.
The project is optional and is the only way to get the laude but he only presented a handful of them and they were in a first comes first served manner (no two groups on the same project). In the end I probably would not do it again."



###Offensive and Defensive Cybersecurity
"If you liked the challenges of Computer Security, you will love this course.
Prof. Polino is really good, lectures are a pleasure to follow. The topics are interesting but some of them are a bit difficult to grasp at first (you must work on it a bit).
In this course up to 18 points are given for challenges during the semester (you can complete up to the exam call) in which you can cooperate with other students informally.
The rest of the points are given at the exam call with a CTF in which you have to solve as many challenges (similar to the ones during the semester, maybe a little bit more difficult) in a day (we had 7 hours for 10 challenges, the majority of the students did 4 or less). During the exam there is no control from the prof but the points of each challenge decrease as people solves it to discourage collaboration."


Very interesting course if you like topics on cybersecurity. I took this course during the first year (before cybersecurity), therefore it is feasible to do so. Good knowledge of C, memory data structure (heap/stack), and some PHP / javascript for web part is preferable. The final score was composed of: 60% for challenges during the semester and 40% for final CTF(Capture The Flag). The load during the semester is consistent to solve the challenges. If you attend lessons of Cyber Challenge contents are very similar.


###Formal languages and compilers
I took this course only because it was mandatory. The professor is quite boring and the exam is not easy. For the people who did Polimi in the bachelor it is similar to API


###Streaming data analytics
I really enjoyed the course. Prof. Della Valle can explain topics without being boring and is always willing to help students, although sometimes he can be a bit messy with the organization of the course. Lectures are easily understandable and mostly practical (there are a few theory lessons). This year the exam was closed book and consisted in about 10 open questions (taken from a pool of questions we already had) and 3 exercises, but note that this structure can change because, since this was the first edition of the course, students chose this formula (the alternative was an open book exam with exercises). Slides are available before lectures and are sufficient to prepare for the theory part of the exam, but I still suggest to attend lectures. There's also a project if you get more than 26 at the exam, but I don't know more about it. This course is definitely suggested, if you want to work in the field of data analytics or only if you want to get an high grade.


###Distributed Software Development
Distributed Software Development isn't properly a course, but it is a project. 
The course is done with two other universities (FER, MDH) and it consists in developing a project in a distributed way: a team is formed by 6/8 people, a part of them from a university and the others from another university. So the communication between the two side of the team is done remotly.
The course starts in October and there are very few lectures. The number of lectures depends on the number of project.
The project are presented by business companies at one of the first lectures.
At the beginning of the course each student has to compile a Google From in which he/she has to select his/her compentencies and the project that he/she prefers. 
At the next lecture the teams are presented and the project development starts. Every two weeks there is a presentation about the project status until the Alpha and  Beta software prototype.
Each team is supervised by two professor (one for each university side of the team). The evaluation of the project is about the project final product, the documentations, the developing process and the presentations.
There aren't lectures about the technologies that can be used, so each students learn by doing his/her.
This type of course needs a lot of time, more than 5 CFU effort (in the other two universities this course has a value of 8 CFU).
I have loved this course because the project have allowed me to learn a lot of thing. Also it was a great experience because i have met other students with different background and competencies.
This course is highly recommend for all students that loves designing and developing software
For more information this is the site of the course: https://www.fer.unizg.hr/rasip/dsd


###Advanced Multivariable Control
The topics are quite interesting and advanced. However, professor Scattolini is really boring and makes the topics difficult to understand. Because of this it’s quite a hard course as well as overly theoretical. The exercise sessions are quite good, it’s the best way to understand the topics taught.



###Uncertainty in Artificial Intelligence
Studiati benissimo la parte di matteucci, per la parte di bonarini prova a fare i temi d'esame vecchi leggendo i suoi consigli


Parte di bonarini semplice da studiare, esercitati sui temi d'esame, poi all'esame bisogna aver un pizzico di fortuna con le tracce, visto che normalmente uno dei due problemi è scritto male


Matteucci fai gli esercizi sulle slide e studiati anche un po' le definizioni, io ho studiato sul libro anche i markov random field (non in programma) ma è utile solo per capire meglio il factor graph. In questo esame la parte di Matteucci secondo me era molto molto facile



###Recommender Systems
Per chi ha fatto l'orale della challenge: ci potete dire cosa chiede o quanto dura? Molto semplice, fa due domande ampie e dura circa 15-20 minuti. A me ha chiesto di fare una panoramica su matrix factorization, entrando sui dettagli sulle cose rilevanti e mostrando formule + stessa cosa per factorization machines. A un mio amico più o meno idem con s-slim e BPR. Se uno ha un'idea generale e sa le formule rilevanti, nulla di cui preoccuparsi - Confermo a me ha chiesto factorization machine e S-slim. Molto tranquillo


Corso carino e molto utile. Di per se non è neanche troppo difficile e l'esame orale non è complicato. Tuttavia a mio avviso la vera learning experience è l'esame fatto con challenge del corso + challenge internazionale, li impari davvero un casino di cose e fa una grossa figura sul CV. Drawbacks: la challenge del corso è un po' una faida fra colleghi, il voto dipende unicamente dalla tua posizione in classifica e va a scalare, quindi il primo prende 28, il secondo 27 eccc... (lo scaling non è questo, ma è per darti un'idea). Non è come neural networks che la posizione contava fino a un certo punto. Se ti capita l'annata ultra competitiva, devi sputarci un po' di sangue ahah


Super consigliato + corso seguibile su Coursera; esame molto fattibile



###Principles of Programming Languages
Molto bella!! Ti insegna a programmare con 3 linguaggi con paradigmi veramente diversi da quelli standard, quindi è difficile. Ti obbliga a uscire dagli schemi mentali soliti, a ripensare il flusso di controllo, ma questo ti permette, nella pratica, di apprezzare le funzioni lambda e di capirne la toria, il significato, l'utilità e l'importanza, come strutturare un programma thread safe, e come la tipizzazione possa esserti utile (te le ho messe in ordine di come le ho trovate utili nel mondo lavorativo). Per il resto i linguaggi sono praticamente morti o comunque dubito che abbiano un utilità intrinseca, ma ti aprono veramente un mondo!! Poi il prof è capace e disponibile, e all'esame ti lascia consultare gli appunti, ma questo non rende l'esame piu' semplice. Poi ti fa vedere come alcune cose vengono implementate (per esempio vedi come vengono gestite le classi in python e come vengono gestite le eccezioni... cose veramente mind-blowing e interessantissime, secondo me). Credo sia uno degli esami migliori della magistrale!!


Aggiungo solo qualche cosa. Viene chiamato Principi di linguaggi ma secondo me è un po'fuorviante. I primi due linguaggi sono funzionali, il terzo è per la programmazione concorrente, specificatamente modello ad attori. Come diceva Marco sono cose che non trovi da altre parti, quindi secondo me è utile (anche perché gli altri tipi di programmazione già lì impari da altre parti, come imperativa e OO. A me è piaciuto molto, devi accettare il fatto di
dover fare cose un po'tanto astratte. Come esame è fattibile ma potresti dover farlo un paio di volte, perché ovviamente dipende se ti ci trovi con l'esercizio oppure no.


Mah, c'entra poco, se non nulla con API. È un corso in cui si impara la semantica e la sintassi di tre linguaggi di programmazione: 
- Scheme: linguaggio pieno di parentesi 😂 serve ad introdurre alcuni concetti di programmazione funzionale, definizione delle macro, continuations... 
- Haskell: linguaggio puramente funzionale, fortemente tipizzato 
- Erlang: linguaggio per la programmazione concorrente. Alla fine non c'è nulla a memoria, l'esame è pure open book, bisogna imparare a ragionare e a scrivere codice in questi tre linguaggio. Se studiato per bene, secondo me, è molto utile. Ad esempio, con questo corso, ho imparato python senza doverlo imparare 😂


Lo sto riseguendo ora. È un corso interessante, perché vengono approfonditi concetti di programmazione che non vengono trattati altrove. Però allo stesso tempo è abbastanza complesso. Bisogna seguire bene le lezioni e cercare di capire tutte le slide. L'esame di per sé non è complicato, bisogna scrivere tre programmi, brevi. Però per farlo, devi aver capito bene la teoria dietro. Non è sicuramente un corso cuscinetto o un corso semplice, però nemmeno impossibile. Con un po' di studio si fa' . Il prof tutto sommato è bravo a spiegare. È un po' strano per certi aspetti, ma spiega tutto e con molta calma 😂. In teoria, una volta seguito questo corso, capire qualsiasi altro linguaggio di programmazione consiste nell'impararsi la sintassi
